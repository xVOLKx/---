// Серверная часть (server.js)

const express = require('express');

const axios = require('axios');

const app = express();

const port = 3000;

app.use(express.json());

const keywords = {

  "example": ["https://example.com", "https://example.org"],

};

app.post('/keywords', (req, res) => {

  const keyword = req.body.keyword;

  res.json(keywords[keyword] || []);

});

app.post('/fetch', async (req, res) => {

  const url = req.body.url;

  try {

    const { data } = await axios.get(url, { responseType: 'stream' });

    data.on('data', (chunk) => {

      res.write(chunk);

    });

    data.on('end', () => {

      res.end();

    });

  } catch (error) {

    res.status(500).send('Error fetching URL');

  }

});

app.listen(port, () => {

  console.log(`Server running at http://localhost:${port}/`);

});

<!-- Клиентская часть (index.html) -->

<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <title>HTTP Client</title>

</head>

<body>

    <input id="keyword" placeholder="Введите ключевое слово"/>

    <button onclick="fetchURLs()">Получить URL</button>

    <ul id="urlList"></ul>

    <script>

        async function fetchURLs() {

            const keyword = document.getElementById('keyword').value;

            const response = await fetch('/keywords', {

                method: 'POST',

                headers: { 'Content-Type': 'application/json' },

                body: JSON.stringify({ keyword })

            });

            const urls = await response.json();

            document.getElementById('urlList').innerHTML = urls.map(url => `<li onclick="downloadContent('${url}')">${url}</li>`).join('');

        }

        async function downloadContent(url) {

            const response = await fetch('/fetch', {

                method: 'POST',

                headers: { 'Content-Type': 'application/json' },

                body: JSON.stringify({ url })

            });

            const text = await response.text();

            localStorage.setItem(url, text);

            alert('Содержимое сохранено в LocalStorage.');

        }

    </script>

</body>

</html>